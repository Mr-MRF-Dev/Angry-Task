name: Release & Deploy GitHub Page 🚀

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    name: Build 🛠
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v5

      - name: Setup Node 📝
        uses: actions/setup-node@v5
        with:
          node-version: "^22.12.0"

      - name: Install Dependencies ⚙
        run: npm ci

      - name: Test 🧪
        run: npm run test:ci

      - name: Code Coverage 📊
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build 💢
        run: npm run build:prod:gh

      - name: Upload Build 🔃
        if: success()
        uses: actions/upload-pages-artifact@v4
        with:
          path: dist/angry-task/browser

  push_to_docker:
    name: Push Docker image to Docker Hub 🐳
    needs: build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v5

      - name: Log in to Docker Hub 🔐
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker images 📋
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}

      - name: Build and push Docker image 🐋
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}

      - name: Generate artifact attestation 📜
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: index.docker.io/${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  deploy:
    needs: push_to_docker
    name: Deploy 🚀

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub Pages 🌍
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    needs: deploy
    name: Release 📚
    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v5
      - name: Create Release ⭐
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
